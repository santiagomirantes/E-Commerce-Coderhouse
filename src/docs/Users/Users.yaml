paths:
  /api/sessions/register:
    post:
      summary: Create a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createUser"
      responses:
        "200":
          description: User created succesfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "500":
          description: Error while creating the user
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Error"
  /api/sessions/login:
    post:
      summary: login an user with email and password
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/loginBody"
      responses:
        "200":
          description: user logged in succesfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "500":
          description: failed to log in
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Error"
  /api/sessions/logout:
    get:
      summary: logout if user is logged in
      tags:
        - User
    responses:
      "200":
        description: user logged out succesfully
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Success"
      "500":
        description: internal server error
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Error"
components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: string
          description: status of the request
    Error:
      type: object
      properties:
        error:
          type: string
          description: message of the error
    User:
      type: object
      properties:
        _id:
          type: ObjectID
          description: auto-generated ID of the object
        first_name:
          type: string
          description: user's first name
        last_name:
          type: string
          description: user's last name (optional)
        email:
          type: string,
          description: email of the user
        password:
          type: string
          description: non-encrypted password of the user
      example:
        _id: ObjectID("66253da08e27f7fd04fbbc00")
        first_name: John
        last_name: Doe
        email: johndoe@johndoe.com
        password: pass1234
  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: string
          description: first name of the user
        last_name:
          type: string
          description: last name of the user (optional)
        email:
          type: string,
          description: email of the user
        password:
          type: string
          description: non-encrypted password of the user
      example:
        first_name: John
        last_name: Doe
        email: johndoe@johndoe.com
        password: pass1234
    loginBody:
      type: object
      properties:
        email:
          type: string
          description: user´s email
        password:
          type: string
          description: non-encrypted user´s password
      example:
        email: johndoe@johndoe.com
        password: pass1234
